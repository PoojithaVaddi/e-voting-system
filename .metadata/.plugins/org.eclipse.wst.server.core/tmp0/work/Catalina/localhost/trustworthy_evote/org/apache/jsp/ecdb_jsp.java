/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2021-03-27 15:02:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import databaseconn.DBConnection;
import java.sql.Connection;
import java.util.Enumeration;
import com.oreilly.servlet.MultipartRequest;
import java.io.File;
import java.text.SimpleDateFormat;
import java.io.FileInputStream;
import java.util.ArrayList;

public final class ecdb_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.util.Enumeration");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.io.FileInputStream");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("databaseconn.DBConnection");
    _jspx_imports_classes.add("com.oreilly.servlet.MultipartRequest");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

try
{	
	String a=null,b=null,c=null,d=null,e=null,f=null,g=null,h=null,j=null;
	
	ArrayList<FileInputStream> list = new ArrayList<FileInputStream>();
	ServletContext context = getServletContext();
	
	String dirName =context.getRealPath("\\Document");
	System.out.println("file path:"+dirName);
	String paramname=null;
	String file=null;
	
	java.util.Date now = new java.util.Date();
	String date=now.toString();
	String DATE_FORMAT = "dd-MM-yyyy hh:mm:ss";
	SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);
	String strDateNew = sdf.format(now) ;
	
	File file1 = null;
	
	MultipartRequest multi = new MultipartRequest(request, dirName,	10 * 1024 * 1024); // 10MB
	
	Enumeration params = multi.getParameterNames();
	while (params.hasMoreElements()) 
	{
		paramname = (String) params.nextElement();
		
		if(paramname.equalsIgnoreCase("name"))
		{
			a=multi.getParameter(paramname);
		}
		if(paramname.equalsIgnoreCase("age"))
		{
			b=multi.getParameter(paramname);
		}
		if(paramname.equalsIgnoreCase("district"))
		{
			c=multi.getParameter(paramname);
		}
		if(paramname.equalsIgnoreCase("state"))
		{
			d=multi.getParameter(paramname);
		}
		if(paramname.equalsIgnoreCase("mobile"))
		{
			j=multi.getParameter(paramname);
		}
		if(paramname.equalsIgnoreCase("Father/Husband"))
		{
			e=multi.getParameter(paramname);
		}
		if(paramname.equalsIgnoreCase("dob"))
		{
			f=multi.getParameter(paramname);
		}
		if(paramname.equalsIgnoreCase("gender"))
		{
			g=multi.getParameter(paramname);
		}
		if(paramname.equalsIgnoreCase("image"))
		{
			h=multi.getParameter(paramname);
		}
		
	}
		
	int i = 0;
	Enumeration files = multi.getFileNames();	
	while (files.hasMoreElements()) 
	{
		paramname = (String) files.nextElement();
		if(paramname.equals("d1"))
		{
			paramname = null;
		}
	
		if(paramname != null)
		{
			i = 1;
			h = multi.getFilesystemName(paramname);
			String fPath = context.getRealPath("\\Document\\"+h);
			file1 = new File(fPath);
			FileInputStream fs = new FileInputStream(file1);
			list.add(fs);
		}		
	}
	FileInputStream fs1 = null;

	Connection con=DBConnection.getconnection();
	String sql="select * from voterdetails where name=? and fname=? and age=? and dob=? and gender=? and district=? and state=?";
	PreparedStatement ps=con.prepareStatement(sql);
	ps.setString(1, a);
	ps.setString(2, e);
	ps.setString(3, b);
	ps.setString(4, f);
	ps.setString(5, g);
	ps.setString(6, c);
	ps.setString(7, d);
	ResultSet rs=ps.executeQuery();
	if(rs.next())
	{
		
      out.write("\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\talert(\"voter already registred.\");\r\n");
      out.write("\t\twindow.location=\"ec.jsp\";\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t");
 
	}
	else
	{
		PreparedStatement ps1=con.prepareStatement("insert into voterdetails(name,fname,age,dob,gender,district,state,image,date) values(?,?,?,?,?,?,?,?,?)");
		ps1.setString(1,a);
	   	ps1.setString(2,e);
		ps1.setString(3,b);
		ps1.setString(4,f);	
		ps1.setString(5,g);
	    ps1.setString(6,c);
	    ps1.setString(7,d);
	    if(i == 0)
	    {
	    	ps1.setObject(8,null);
	    }    	
	   	else if(i == 1)
	   	{
	   		fs1 = (FileInputStream)list.get(0);
	   		ps1.setBinaryStream(8,fs1,fs1.available());
	   	}	
	    ps1.setString(9,strDateNew);	
		
		int x=ps1.executeUpdate();

		if(x!=0)
		{
			int mid;
			String s="select max(id) as mid from voterdetails";
			PreparedStatement ps2=con.prepareStatement(s);
			ResultSet rs1=ps2.executeQuery();
			if(rs1.next()){
				mid=rs1.getInt("mid");
			}
			else
			{
				mid=1;
			}
			String str="insert into user(name,password,mobile,uid) values(?,?,?,?)";
			PreparedStatement ps3=con.prepareStatement(str);
			ps3.setString(1, a);
			ps3.setString(2, "");
			ps3.setString(3, j);
			ps3.setInt(4, mid);
			ps3.execute();
			
      out.write("\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\talert(\"uploaded successfully\");\r\n");
      out.write("\t\t\twindow.location=\"ec.jsp\";\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t\t");
 
		}
		else
		{
			
      out.write("\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\talert(\"upload failed\");\r\n");
      out.write("\t\t\twindow.location=\"ec.jsp\";\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t\t");

		}
	}	

}
catch(Exception e)
{
	e.printStackTrace();
}

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
